#include <iostream>
#include<string>
#include<cstdlib>//its used for exit function
using namespace std;
class library{
    public:
    int id;
    char name[100];
    char student[100];
    char author[100];
    int price;
    int pages;
    
};

int main()
{
    library lib[20];//lib[20] is used to specify how many entries maximum u can add
    int input=0;
    int count=0;
    while(input!=3){
        cout<<"enter 1 to input details like id,name,author,student,price,pages"<<endl;
        cout<<"enter 2 ot display"<<endl;
        cout<<"enter 3 to quit";
        cin>>input;
        switch(input){
            case 1:
            cout<<"enter book id"<<endl;
            
            cin>>lib[count].id;
            cin.ignore();
            cout<<"enter book name"<<endl;
            cin.getline(lib[count].name,100);
            cout<<"enter book author"<<endl;
            cin.getline(lib[count].author,100);
            cout<<"enter student name"<<endl;
            cin.getline(lib[count].student,100);
            cout<<"enter book price"<<endl;
            cin>>lib[count].price;
            cin.ignore();
            cout<<"enter book pages"<<endl;
            cin>>lib[count].pages;
            cin.ignore();
            count++;
            break;
            case 2:
            for(int i=0;i<count;i++){
                cout<<lib[i].id<<" ";
                cout<<lib[i].name<<" ";//delimiter already moves to next line thus no need to use endl while printing
                cout<<lib[i].author<<" ";
                cout<<lib[i].price<<" ";
                cout<<lib[i].pages<<endl;
                
                
            }
            break;
            case 3:
            exit(0);
            break;
            default:
            cout<<"you have entered wrong value pls type again";
        }
    }

    return 0;
}

2nd way!!!!!!!!!!!!!!
#include <iostream>
#include <cstring> // For handling C-style strings
#include <cstdlib> // For exit function

using namespace std;

class Library {
public:
    int id;
    char name[100];
    char student[100];
    char author[100];
    int price;
    int pages;
};

int main() {
    Library lib[20]; // Maximum 20 entries
    int input = 0;
    int count = 0;

    while (input != 3) {
        cout << "Enter 1 to input details like id, name, author, student, price, pages" << endl;
        cout << "Enter 2 to display" << endl;
        cout << "Enter 3 to quit" << endl;
        cin >> input;
        cin.ignore(); // Clear newline character left in the buffer

        switch (input) {
            case 1:
                if (count < 20) {
                    cout << "Enter book details in the format: id$name$author$price$pages" << endl;
                    cout << "Use '$' as a delimiter between fields:" << endl;

                    char buffer[500];
                    cout << "Enter book details: ";
                    cin.getline(buffer, 500);//should put cin>>buffer cause if u want spaces in diffrent variable it wont be able to print as cin ends when a white space occurs

                    // Tokenize the input buffer using '$' as the delimiter
                    char* token = strtok(buffer, "$");
                    if (token != nullptr) {
                        lib[count].id = atoi(token); // Convert string to integer
                    }

                    token = strtok(nullptr, "$");
                    if (token != nullptr) {
                        strncpy(lib[count].name, token, sizeof(lib[count].name) - 1);
                        lib[count].name[sizeof(lib[count].name) - 1] = '\0'; // Ensure null termination
                    }

                    token = strtok(nullptr, "$");
                    if (token != nullptr) {
                        strncpy(lib[count].author, token, sizeof(lib[count].author) - 1);
                        lib[count].author[sizeof(lib[count].author) - 1] = '\0'; // Ensure null termination
                    }

                    token = strtok(nullptr, "$");
                    if (token != nullptr) {
                        lib[count].price = atoi(token); // Convert string to integer
                    }

                    token = strtok(nullptr, "$");
                    if (token != nullptr) {
                        lib[count].pages = atoi(token); // Convert string to integer
                    }

                    count++;
                } else {
                    cout << "Library is full!" << endl;
                }
                break;

            case 2:
                for (int i = 0; i < count; i++) {
                    cout << "Book ID: " << lib[i].id << endl;
                    cout << "Book Name: " << lib[i].name << endl;
                    cout << "Book Author: " << lib[i].author << endl;
                    cout << "Book Price: " << lib[i].price << endl;
                    cout << "Book Pages: " << lib[i].pages << endl;
                    cout << "-----------------------" << endl;
                }
                break;

            case 3:
                exit(0);
                break;

            default:
                cout << "You have entered a wrong value. Please try again." << endl;
        }
    }

    return 0;
}
3)it can also be used in string 
#include <iostream>
#include<sstream>
#include<vector>
#include<string>
using namespace std;
class library{
    public:
    int id;
    string name;
    string student;
    string author;
    int price;
    int pages;
    
};


int main()
{
    vector<library> lib;
    int input=0;
    while(input!=3){
        cout << "Enter 1 to input details" << endl;
        cout << "Enter 2 to display" << endl;
        cout << "Enter 3 to quit" << endl;
        cin >> input;
        cin.ignore();
        switch(input){
            case 1:
            if(lib.size()<20){
            
            string buffer;
            cout<<"pls enter ur details";
            getline(cin,buffer);
            stringstream ss(buffer);
            string token;
            library newbook;
            getline(ss,token,'$');
            newbook.id=stoi(token);
            getline(ss,token,'$');
            newbook.name=token;
            getline(ss,token,'$');
            newbook.author=token;
            getline(ss,token,'$');
            newbook.price=stoi(token);
            getline(ss,token,'$');
            newbook.pages=stoi(token);
            
            lib.push_back(newbook);
            }
            else{
                cout<<"oops library is full";
            }
            break;
            case 2:
            for(const auto&book : lib){
                cout << "Book ID: " << book.id << endl;
                cout << "Book Name: " << book.name << endl;
                cout << "Book Author: " << book.author << endl;
                cout << "Book Price: " << book.price << endl;
                cout << "Book Pages: " << book.pages << endl;
                cout << "----";
            }
        }
    }
    
    return 0;
}
4)other way is to store the 2) wala type using vector it becomes much easier
#include <iostream>
#include<cstring>
#include<cstdlib>
#include<vector>

using namespace std;
class library{
    public:
    int id;
    char name[100];
    char student[100];
    char author[100];
    int price;
    int pages;
};


int main(){
   vector<library> lib;
   int input=0;
   int count=0;
   while(input!=3){
       cout<<"enter 1 to input details"<<endl;
       cout<<"enter 2 to display"<<endl;
       cout<<"enter 3 to quit"<<endl;
       cin>>input;
       cin.ignore();
       
       switch(input){
           case 1:
           if(count<20){
               library news;
               cout<<"enter the details in format id$name$author$price$pages"<<endl;
               cout<<"use delimiter between fields"<<endl;
               char buffer[500];
               cout<<"enter book details";
               cin.getline(buffer,500);
               char *token=strtok(buffer,"$");
               if (token!=nullptr){
                   news.id=atoi(token);
               }
                 token=strtok(nullptr,"$");
                if (token!=nullptr){
                   strncpy(news.name,token,sizeof(lib[count].name)-1);
                   news.name[sizeof(lib[count].name)-1]='\0';
               }
                token=strtok(nullptr,"$");
               if(token!=nullptr){
                   strncpy(news.author,token,sizeof(news.author)-1);
                   news.author[sizeof(lib[count].author)-1]='\0';
                   
               }
               token=strtok(nullptr,"$");
               if (token!=nullptr){
                   news.price=atoi(token);
               }
               token=strtok(nullptr,"$");
               if (token!=nullptr){
                   news.pages=atoi(token);
               }
                
               lib.push_back(news);
           }
           
           else{
               cout<<"library is full";
           }
           break;
           case 2:
           for (const auto &book:lib) {
                    cout << "Book ID: " << book.id << endl;
                    cout << "Book Name: " <<book.name << endl;
                    cout << "Book Author: " << book.author << endl;
                    cout << "Book Price: " << book.price << endl;
                    cout << "Book Pages: " << book.pages << endl;
                    cout << "-----------------------" << endl;
                }
                break;
            case 3:
            exit(0);
            break;
             default:
                cout << "You have entered a wrong value. Please try again." << endl;
       }
       
   }

    return 0;
}

